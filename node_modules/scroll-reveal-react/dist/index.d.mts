import * as React from 'react';
import React__default from 'react';

type DefaultProps$1 = {
    ref?: React__default.Ref<HTMLDivElement>;
    duration?: number;
    delay?: number;
    triggerAt?: number;
    onlyOnce?: boolean;
    function?: 'linear' | 'ease' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'auto';
};
type FadeAnimationProps = {
    type: 'fade' | 'flicker';
};
type ZoomAnimationProps = {
    type: 'zoom';
    initialZoom: number;
    hasBounce?: boolean;
    bounceFactor?: number;
    pivot?: 'center' | 'top' | 'bottom' | 'left' | 'right';
};
type FlipAnimationProps = {
    type: 'flip';
    direction: 'left-right' | 'top-bottom';
};
type SlideAnimationProps = {
    type: 'slide';
    origin: 'left' | 'right' | 'top' | 'bottom';
    distance?: number;
    hasMomentum?: boolean;
};
type BlurAnimationProps = {
    type: 'blur';
    amount: number;
};
type ScaleAnimationProps = {
    type: 'scale';
    initialScale: [x: number, y: number];
};
type RollAnimationProps = {
    type: 'roll';
    direction: 'clock' | 'anti-clock';
};
type AnimationProps$1 = FadeAnimationProps | ZoomAnimationProps | FlipAnimationProps | SlideAnimationProps | BlurAnimationProps | ScaleAnimationProps | RollAnimationProps;
type Props$1 = DefaultProps$1 & AnimationProps$1 & React__default.HTMLAttributes<HTMLDivElement>;
declare const Div: React__default.FC<Props$1>;

type DefaultProps = {
    content: string;
    ref?: React__default.Ref<HTMLHeadingElement>;
    delay?: number;
    triggerAt?: number;
};
type TypewriterAnimationProps = {
    type: 'typewriter';
    hideCursor?: boolean;
    latterDelay?: number;
};
type FadeLattersAnimationProps = {
    type: 'fade';
    duration?: number;
};
type RandomLattersAnimationProps = {
    type: 'random';
    alphabetOnly?: boolean;
    numberOnly?: boolean;
    duration?: number;
    randoms?: number;
};
type AnimationProps = TypewriterAnimationProps | FadeLattersAnimationProps | RandomLattersAnimationProps;
type Props = DefaultProps & AnimationProps & React__default.HTMLAttributes<HTMLHeadingElement>;
declare const Text: React__default.FC<Props>;

declare const ScrollReveal: {
    Div: React.FC<{
        ref?: React.Ref<HTMLDivElement> | undefined;
        duration?: number | undefined;
        delay?: number | undefined;
        triggerAt?: number | undefined;
        onlyOnce?: boolean | undefined;
        function?: "linear" | "ease" | "ease-in" | "ease-out" | "ease-in-out" | "auto" | undefined;
    } & ({
        type: "fade" | "flicker";
    } | {
        type: "zoom";
        initialZoom: number;
        hasBounce?: boolean | undefined;
        bounceFactor?: number | undefined;
        pivot?: "center" | "top" | "bottom" | "left" | "right" | undefined;
    } | {
        type: "flip";
        direction: "left-right" | "top-bottom";
    } | {
        type: "slide";
        origin: "top" | "bottom" | "left" | "right";
        distance?: number | undefined;
        hasMomentum?: boolean | undefined;
    } | {
        type: "blur";
        amount: number;
    } | {
        type: "scale";
        initialScale: [x: number, y: number];
    } | {
        type: "roll";
        direction: "clock" | "anti-clock";
    }) & React.HTMLAttributes<HTMLDivElement>>;
    Text: React.FC<{
        content: string;
        ref?: React.Ref<HTMLHeadingElement> | undefined;
        delay?: number | undefined;
        triggerAt?: number | undefined;
    } & ({
        type: "typewriter";
        hideCursor?: boolean | undefined;
        latterDelay?: number | undefined;
    } | {
        type: "fade";
        duration?: number | undefined;
    } | {
        type: "random";
        alphabetOnly?: boolean | undefined;
        numberOnly?: boolean | undefined;
        duration?: number | undefined;
        randoms?: number | undefined;
    }) & React.HTMLAttributes<HTMLHeadingElement>>;
};

export { Div, Text, ScrollReveal as default };
